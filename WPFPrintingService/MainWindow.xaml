<Window x:Class="WPFPrintingService.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFPrintingService"
        mc:Ignorable="d"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        ResizeMode="CanMinimize"
        Title="Printing Service" Height="688" Width="1295" WindowStartupLocation="CenterScreen" Loaded="Window_Loaded" Closing="Window_Closing"
>
    <Grid x:Name="mainGrid">
        
        <!--Design Grid Layout-->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300"/>
            <ColumnDefinition Width="140"/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition Width="150"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="200"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="150"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        
        <!--Label Service-->
        <TextBlock 
            Grid.Row="0" 
            Grid.Column="0"
            Margin="5"
            Text="Service"
            VerticalAlignment="Center" 
            Foreground="Red" 
            Style="{StaticResource MaterialDesignHeadline6TextBlock}"
        />
        
        <!--Check box to start service on app start-->
        <CheckBox 
            Grid.Row="0"
            Grid.Column="1"
            Margin="5"
            x:Name="chbAutoRunService" 
            Content="Auto Run Service"
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
            Cursor="Hand" 
            Checked="chbAutoRunService_Checked" 
            Unchecked="chbAutoRunService_Unchecked"
        />


        <!--Button Start Stop Server-->
        <Button
            Grid.Row="1" 
            Grid.Column="0"
            x:Name="btnStartStopServer"
            VerticalAlignment="Center"
            Margin="5"
            Click="btnStartStopServer_Click" 
            Cursor="Hand">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Start"/>
                <materialDesign:PackIcon Kind="Play" Margin="4 0.5 0 0"/>
            </StackPanel>
        </Button>
        
        <!--Button Server Info-->
        <Button
            Grid.Row="1"
            Grid.Column="1"
            Margin="5"
            VerticalAlignment="Center"
            HorizontalAlignment="Stretch"
            Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}" 
            CommandTarget="{Binding ElementName=serverInfoDialog}"
            Cursor="Hand">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Info"/>
                <materialDesign:PackIcon Kind="Information" Margin="4 0.5 0 0"/>
            </StackPanel>
        </Button>
        <materialDesign:DialogHost
            Grid.Row="0"
            Grid.Column="0"
            Grid.RowSpan="6"
            Grid.ColumnSpan="5"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            DialogClosing="DialogHost_DialogClosing"
            x:Name="serverInfoDialog"
            Panel.ZIndex="100"
            CloseOnClickAway="True">
            <materialDesign:DialogHost.DialogContent>
                <StackPanel Margin="16">
                    <TextBlock Text="Server Info" TextAlignment="Left" Margin="0 8 0 0" HorizontalAlignment="Stretch" Style="{StaticResource MaterialDesignHeadline6TextBlock}"/>
                    <TextBlock Text="Server : http://127.0.0.1:8000" Margin="0 8 0 0" HorizontalAlignment="Stretch" TextAlignment="Center"/>
                    <TextBlock Text="Version : 1.1.0" Margin="0 8 0 0" HorizontalAlignment="Stretch" TextAlignment="Center"/>
                    <!--<StackPanel Orientation="Horizontal" HorizontalAlignment="Right"
                    </StackPanel>-->
                </StackPanel>
            </materialDesign:DialogHost.DialogContent>
        </materialDesign:DialogHost>


        <!--Server Status-->
        <GroupBox
            Grid.Row="2"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Margin="5"
            Header="Status"
            Style="{DynamicResource MaterialDesignGroupBox}"
            VerticalAlignment="Stretch" 
            BorderThickness="0">
            <TextBlock x:Name="txtServerStatus" Margin="6,6,6,6" TextWrapping="Wrap"/>
        </GroupBox>




        <!--List of connected websocket clients-->
        <DataGrid 
            Grid.Row="3"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Margin="5"
            x:Name="lvConnectWebSocketClients"
            SelectionMode="Single" 
            AutoGenerateColumns="False" 
            IsReadOnly="True" 
            HeadersVisibility="Column"
            VerticalAlignment="Stretch">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Client Name" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}" VerticalAlignment="Center" Margin="5,0,5,0" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis">
                                <TextBlock.ToolTip>
                                    <ToolTip>
                                        <TextBlock Text="{Binding Name}"/>
                                    </ToolTip>
                                </TextBlock.ToolTip>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="IP" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Ip}" VerticalAlignment="Center" Margin="5,0,5,0" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis">
                                <TextBlock.ToolTip>
                                    <ToolTip>
                                        <TextBlock Text="{Binding Ip}"/>
                                    </ToolTip>
                                </TextBlock.ToolTip>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        
        
        <!--Message box to send to client-->
        <TextBox 
            Grid.Row="4"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Margin="5"
            x:Name="txtMessage"
            TextWrapping="Wrap" 
            Text="Hello Everyone From Server" 
            VerticalAlignment="Stretch"
            materialDesign:HintAssist.Hint="Message"
            Style="{StaticResource MaterialDesignOutlinedTextBox}"
        />
        
        <!--Button send message to every clients-->
        <Button
            Grid.Row="5"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Margin="5"
            x:Name="btnSendToEveryClients"
            VerticalAlignment="Center"
            Click="btnSendToEveryClients_Click" 
            Cursor="Hand"
            >
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Send To Every Clients"/>
                <materialDesign:PackIcon Kind="Broadcast" Margin="4 .5 0 0"/>
            </StackPanel>
        </Button>
        <materialDesign:Snackbar
            Grid.Row="0"
            Grid.Column="0"
            Grid.ColumnSpan="5"
            Grid.RowSpan="6"
            Panel.ZIndex="100"
            HorizontalAlignment="Stretch"
            x:Name="SnackbarFive">
            <materialDesign:SnackbarMessage
                Content="Sent to clients success"
                ActionContent="OK"
            />
        </materialDesign:Snackbar>



        <!--List printer label-->
        <TextBlock 
            Grid.Row="1"
            Grid.Column="2"
            Text="Available Printers"
            HorizontalAlignment="Left"
            Margin="5" 
            VerticalAlignment="Center" 
            Foreground="Red"
            Style="{StaticResource MaterialDesignHeadline6TextBlock}"
        />


        <!--Button Refresh Printer-->
        <Button
            Grid.Row="1"
            Grid.Column="6"
            x:Name="btnRefreshPrinterList"
            HorizontalAlignment="Right"
            Margin="5" 
            VerticalAlignment="Center"
            Cursor="Hand" 
            Click="btnRefreshPrinterList_Click">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Refresh"/>
                <materialDesign:PackIcon Kind="Refresh" Margin="4 .5 0 0"/>
            </StackPanel>
        </Button>


        <!--List Printers-->
        <DataGrid 
            Grid.Row="2"
            Grid.Column="2"
            Grid.ColumnSpan="3"
            Grid.RowSpan="3"
            Margin="5"
            x:Name="dgPrinters" 
            CanUserSortColumns="False" 
            CanUserResizeRows="false"
            SelectionMode="Single" 
            AutoGenerateColumns="False" 
            IsReadOnly="True" 
            HeadersVisibility="Column" 
            RenderTransformOrigin="1,1" 
            CanUserAddRows="False" 
            HorizontalAlignment="Left" 
            VerticalAlignment="Stretch">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Printer Name" Width="250">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding PrinterName}" VerticalAlignment="Center" Margin="5,0,5,0" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis">
                                <TextBlock.ToolTip>
                                    <ToolTip>
                                        <TextBlock Text="{Binding PrinterName}"/>
                                    </ToolTip>
                                </TextBlock.ToolTip>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Test Actions" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Button x:Name="btnPrintAndCut" Content="Print And Cut" Click="btnPrintAndCut_Click" Margin="5,5,2.5,5" Width="100" Cursor="Hand"/>
                                <Button x:Name="btnPrintAndKickDrawer" Content="Print &amp; Kich Cash Drawer" Click="btnPrintAndKickDrawer_Click" Margin="2.5,5,2.5,5" Width="160" Cursor="Hand"/>
                                <Button x:Name="btnPrintOnly" Content="Print Only" Click="btnPrintOnly_Click" Margin="2.5,5,2.5,5" Width="80" Cursor="Hand"/>
                                <Button x:Name="btnCutOnly" Content="Cut Only" Click="btnCutOnly_Click" Margin="2.5,5,2.5,5" Width="60" Cursor="Hand"/>
                                <Button x:Name="btnKickDrawer" Content="Kick Cash Drawer (Till)" Margin="2.5,5,5,5" Width="130" Cursor="Hand" Click="btnKickDrawer_Click"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        
        
        
        <!--Check box to launch app on windows start up-->
        <CheckBox 
            Grid.Row="5"
            Grid.Column="3"
            x:Name="chbRunOnStartUp" 
            Content="Run on Startup"
            HorizontalAlignment="Right"
            VerticalAlignment="Stretch"
            Checked="chbRunOnStartUp_Checked" 
            Unchecked="chbRunOnStartUp_Unchecked" 
            Cursor="Hand"
        />

        <!--Button quit-->
        <Button
            Grid.Row="5"
            Grid.Column="4"
            Margin="5"
            VerticalAlignment="Center"
            HorizontalAlignment="Right"
            Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}" 
            CommandTarget="{Binding ElementName=confirmExitDialog}"
            Cursor="Hand">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Quit"/>
                <materialDesign:PackIcon Kind="ExitToApp" Margin="4 0.5 0 0"/>
            </StackPanel>
        </Button>
        <materialDesign:DialogHost
            Grid.Row="0"
            Grid.Column="0"
            Grid.RowSpan="6"
            Grid.ColumnSpan="5"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            DialogClosing="DialogHost_DialogClosing"
            Panel.ZIndex="100"
            x:Name="confirmExitDialog">
            <materialDesign:DialogHost.DialogContent>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="100"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="50"/>
                    </Grid.RowDefinitions>


                    <TextBlock
                        Grid.Row="0"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Text="Quit"
                        Margin="5 20" 
                        HorizontalAlignment="Center" 
                        TextAlignment="Center"
                    />

                    <Button
                        Grid.Row="1"
                        Grid.Column="0"
                        HorizontalAlignment="Stretch"
                        Style="{StaticResource MaterialDesignFlatButton}"
                        IsDefault="True"
                        Margin="5"
                        Command="materialDesign:DialogHost.CloseDialogCommand">
                        <Button.CommandParameter>
                            <system:Boolean xmlns:system="clr-namespace:System;assembly=mscorlib">
                                True
                            </system:Boolean>
                        </Button.CommandParameter>
                        Exit
                    </Button>
                    <Button
                        Grid.Row="1"
                        Grid.Column="1"
                        HorizontalAlignment="Stretch"
                        Style="{StaticResource MaterialDesignFlatButton}"
                        IsCancel="True"
                        Margin="5"
                        Command="materialDesign:DialogHost.CloseDialogCommand"
                    >
                        <Button.CommandParameter>
                            <system:Boolean xmlns:system="clr-namespace:System;assembly=mscorlib">
                                False
                            </system:Boolean>
                        </Button.CommandParameter>
                        CANCEL
                    </Button>
                    
                </Grid>
            </materialDesign:DialogHost.DialogContent>
        </materialDesign:DialogHost>





        <tb:TaskbarIcon x:Name="myNotifyIcon"
            Visibility="Hidden"
            ToolTipText="Printing Servcie"
            IconSource="/Icons/cherry.ico"
            PopupActivation="RightClick"
            TrayMouseDoubleClick="myNotifyIcon_TrayMouseDoubleClick"
        >
            <tb:TaskbarIcon.TrayToolTip>
                <Border
                    Background="White"
                    BorderBrush="Orange"
                    BorderThickness="2"
                    CornerRadius="4"
                    Opacity="0.8"
                    Width="160"
                    Height="40"
                >
                <TextBlock
                    Text="Printing Service"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                />
                </Border>
            </tb:TaskbarIcon.TrayToolTip>


            <tb:TaskbarIcon.TrayPopup>
                <Border
                  Background="White"
                  BorderBrush="Orange"
                  BorderThickness="2"
                  CornerRadius="4"
                  Width="160"
                  Height="40">
                    <Button x:Name="btnExitPrintingServiceViaSystemTray"
                    Content="Exit"
                    HorizontalAlignment="Stretch"
                            Cursor="Hand"
                    VerticalAlignment="Stretch" Click="btnExitPrintingServiceViaSystemTray_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <!--<Setter Property="Background" Value="Green"/>-->
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border CornerRadius="5" Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Gray"/>
                                        <Setter Property="Foreground" Value="White"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Border>
            </tb:TaskbarIcon.TrayPopup>

        </tb:TaskbarIcon>

    </Grid>
</Window>
