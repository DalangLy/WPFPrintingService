<Window x:Class="WPFPrintingService.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:WPFPrintingService"
    mc:Ignorable="d"
    xmlns:tb="http://www.hardcodet.net/taskbar"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextElement.FontWeight="Regular"
    TextElement.FontSize="13"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    Background="{DynamicResource MaterialDesignPaper}"
    FontFamily="{DynamicResource MaterialDesignFont}"
    ResizeMode="CanMinimize"
    Title="Printing Service"
    Height="750" 
    Width="1295"
    WindowStartupLocation="CenterScreen"
    Loaded="Window_Loaded" 
    Closing="Window_Closing"
    DataContext="{x:Static local:WebSocketClientViewModel.Instance}">


    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
        <local:ParametrizedBooleanToVisibilityConverter x:Key="InvertBoolToVisConverter"/>
    </Window.Resources>


    <Grid x:Name="mainGrid">
        
        <!--Design Grid Layout-->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300"/>
            <ColumnDefinition Width="140"/>
            <ColumnDefinition Width="20"/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition Width="150"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="200"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="150"/>
            <RowDefinition Height="70"/>
        </Grid.RowDefinitions>
        
        <!--Label Service-->
        <TextBlock 
            Grid.Row="0" 
            Grid.Column="0"
            Margin="5"
            Text="Service"
            VerticalAlignment="Center" 
            Foreground="Red" 
            Style="{StaticResource MaterialDesignHeadline6TextBlock}"
        />
        
        <!--Check box to start service on app start-->
        <CheckBox 
            Grid.Row="0"
            Grid.Column="1"
            Margin="5"
            Content="Auto Run Service"
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
            Cursor="Hand" 
            IsChecked="{Binding IsRunServiceOnStartUp}"
            Command="{Binding ToggleRunServiceOnStartUp}"
            CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
        />


        <!--Button Start Server-->
        <Button
            Grid.Row="1" 
            Grid.Column="0"
            VerticalAlignment="Center"
            Margin="5"
            Command="{Binding StartWebSocketServer}"
            Visibility="{Binding Path=IsServiceRunning, Converter={StaticResource InvertBoolToVisConverter}, ConverterParameter=false }"
            Cursor="Hand">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Start"/>
                <materialDesign:PackIcon Kind="Play" Margin="4 0.5 0 0"/>
            </StackPanel>
        </Button>

        <!--Button stop server-->
        <Button
            Grid.Row="1" 
            Grid.Column="0"
            VerticalAlignment="Center"
            Margin="5"
            Visibility="{Binding Path=IsServiceRunning, Converter={StaticResource BoolToVisConverter} }"
            Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
            CommandTarget="{Binding ElementName=confirmStopServiceDialog}"
            Cursor="Hand">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Stop"/>
                <materialDesign:PackIcon Kind="Stop" Margin="4 0.5 0 0"/>
            </StackPanel>
        </Button>
        <materialDesign:DialogHost
            Grid.Row="0"
            Grid.Column="0"
            Grid.RowSpan="6"
            Grid.ColumnSpan="6"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Panel.ZIndex="100"
            IsOpen="{Binding LoadingService}"
            x:Name="confirmStopServiceDialog">
            <materialDesign:DialogHost.DialogContent>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="100"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="50"/>
                    </Grid.RowDefinitions>

                    <TextBlock
                        Grid.Row="0"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Text="Stop Service?"
                        Margin="5 20" 
                        HorizontalAlignment="Center" 
                        TextAlignment="Center"
                    />

                    <Button
                        Grid.Row="1"
                        Grid.Column="0"
                        HorizontalAlignment="Stretch"
                        Style="{StaticResource MaterialDesignFlatButton}"
                        IsDefault="True"
                        Margin="5"
                        Command="{Binding StopCommand}">
                        STOP
                    </Button>
                    <Button
                        Grid.Row="1"
                        Grid.Column="1"
                        HorizontalAlignment="Stretch"
                        Style="{StaticResource MaterialDesignFlatButton}"
                        IsCancel="True"
                        Margin="5"
                        Command="materialDesign:DialogHost.CloseDialogCommand">
                        <Button.CommandParameter>
                            <system:Boolean xmlns:system="clr-namespace:System;assembly=mscorlib">
                                False
                            </system:Boolean>
                        </Button.CommandParameter>
                        CANCEL
                    </Button>

                </Grid>
            </materialDesign:DialogHost.DialogContent>
        </materialDesign:DialogHost>


        <!--Button Server Info-->
        <Button
            Grid.Row="1"
            Grid.Column="1"
            Margin="5"
            VerticalAlignment="Center"
            HorizontalAlignment="Stretch"
            Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}" 
            CommandTarget="{Binding ElementName=serverInfoDialog}"
            Cursor="Hand">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Info"/>
                <materialDesign:PackIcon Kind="Information" Margin="4 0.5 0 0"/>
            </StackPanel>
        </Button>
        <materialDesign:DialogHost
            Grid.Row="0"
            Grid.Column="0"
            Grid.RowSpan="6"
            Grid.ColumnSpan="6"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            DialogClosing="DialogHost_DialogClosing"
            x:Name="serverInfoDialog"
            Panel.ZIndex="100"
            CloseOnClickAway="True">
            <materialDesign:DialogHost.DialogContent>
                <Grid Width="300" Height="130" Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition Height="20"/>
                    </Grid.RowDefinitions>

                    <TextBlock
                        Grid.Row="0"
                        Text="Server Info" 
                        Margin="5" 
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        Style="{StaticResource MaterialDesignHeadline6TextBlock}"/>
                    <StackPanel 
                        Grid.Row="1"
                        Margin="5"
                        VerticalAlignment="Stretch"
                        >
                        <TextBlock 
                            Text="Server IP : 192.168.0.137"
                            HorizontalAlignment="Stretch"/>
                        <TextBlock
                            Text="Server PORT : 1100"  
                            HorizontalAlignment="Stretch"/>
                    </StackPanel>
                    <TextBlock
                        Grid.Row="3"
                        Text="version : 2.1.0"
                        Margin="0 8 0 0"
                        HorizontalAlignment="Stretch" 
                        VerticalAlignment="Bottom" 
                        TextAlignment="Center"/>
                </Grid>
            </materialDesign:DialogHost.DialogContent>
        </materialDesign:DialogHost>


        <!--Server Status-->
        <GroupBox
            Grid.Row="2"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Margin="5"
            Header="Status"
            Style="{DynamicResource MaterialDesignGroupBox}"
            materialDesign:ShadowAssist.ShadowDepth="Depth3"
            VerticalAlignment="Stretch" 
            BorderThickness="1">
            <GroupBox.HeaderTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="Cloud" Height="32" Width="32" VerticalAlignment="Center"/>
                        <TextBlock VerticalAlignment="Center" Margin="6,6,6,6" Text="{Binding}" TextWrapping="Wrap" Style="{StaticResource MaterialDesignSubtitle2TextBlock}"/>
                    </StackPanel>
                </DataTemplate>
            </GroupBox.HeaderTemplate>
            <TextBlock Text="{Binding ServerStatus}" Margin="6,6,6,6" TextWrapping="Wrap"/>
        </GroupBox>


        <!--List of connected websocket clients-->
        <DataGrid 
            Grid.Row="3"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Margin="5"
            ItemsSource="{Binding WebSocketClients}"
            SelectionMode="Single" 
            AutoGenerateColumns="False" 
            IsReadOnly="True" 
            HeadersVisibility="Column"
            VerticalAlignment="Stretch">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Client Name" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}" VerticalAlignment="Center" Margin="5,0,5,0" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis">
                                <TextBlock.ToolTip>
                                    <ToolTip>
                                        <TextBlock Text="{Binding Name}"/>
                                    </ToolTip>
                                </TextBlock.ToolTip>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="IP" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Ip}" VerticalAlignment="Center" Margin="5,0,5,0" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis">
                                <TextBlock.ToolTip>
                                    <ToolTip>
                                        <TextBlock Text="{Binding Ip}"/>
                                    </ToolTip>
                                </TextBlock.ToolTip>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        
        
        <!--Message box to send to client-->
        <TextBox 
            Grid.Row="4"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Margin="5"
            x:Name="txtMessage"
            TextWrapping="Wrap" 
            Text="Hello Everyone From Server" 
            VerticalAlignment="Stretch"
            materialDesign:HintAssist.Hint="Message"
            Style="{StaticResource MaterialDesignOutlinedTextBox}"
        />


        <!--<TextBox
            x:Name="NameTextBox"
            materialDesign:HintAssist.Hint="Name">
            <TextBox.Text>
                <Binding
                    Path="Name"
                    UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <domain1:NotEmptyValidationRule
                            ValidatesOnTargetUpdated="True" xmlns:domain1="clr-namespace:MaterialDesignDemo.Domain" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>-->

        <!--Button send message to every clients-->
        <Button
            Grid.Row="5"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Margin="5"
            VerticalAlignment="Center"
            Command="{Binding SendToAllClientsCommand}"
            Cursor="Hand"
            Height="48">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Send To Every Clients"/>
                <materialDesign:PackIcon Kind="Broadcast" Margin="4 .5 0 0"/>
            </StackPanel>
        </Button>
        <materialDesign:Snackbar
            Grid.Row="0"
            Grid.Column="2"
            Grid.ColumnSpan="2"
            Grid.RowSpan="6"
            Panel.ZIndex="100"
            HorizontalAlignment="Stretch"
            IsActive="{Binding IsSendingMessageToAllClients}">
            <materialDesign:SnackbarMessage
                Content="Sent to clients success"
                ActionContent="OK"
            />
        </materialDesign:Snackbar>

        <Border
            Grid.Column="2"
            Grid.Row="0"
            Grid.RowSpan="6"
            Background="{DynamicResource MaterialDesignDivider}"
            Width="1"
            VerticalAlignment="Stretch"
            SnapsToDevicePixels="True" />


        <!--List printer label-->
        <TextBlock 
            Grid.Row="1"
            Grid.Column="3"
            Text="Available Printers"
            HorizontalAlignment="Left"
            Margin="5" 
            VerticalAlignment="Center" 
            Foreground="Red"
            Style="{StaticResource MaterialDesignHeadline6TextBlock}"
        />


        <!--Button Refresh Printer-->
        <Button
            DataContext="{x:Static local:PrintersViewModel.Instance}"
            Grid.Row="1"
            Grid.Column="6"
            HorizontalAlignment="Right"
            Margin="5" 
            VerticalAlignment="Center"
            Cursor="Hand" 
            Command="{Binding RefreshPrintersListCommand}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Refresh"/>
                <materialDesign:PackIcon Kind="Refresh" Margin="4 .5 0 0"/>
            </StackPanel>
        </Button>


        <!--List Printers-->
        <local:ListPrintersView
            Grid.Row="2"
            Grid.Column="3"
            Grid.ColumnSpan="3"
            Grid.RowSpan="3"
            Margin="5"
            DataContext="{x:Static local:PrintersViewModel.Instance}"/>



        <!--Check box to launch app on windows start up-->
        <CheckBox 
            Grid.Row="5"
            Grid.Column="4"
            Content="Run on Startup"
            HorizontalAlignment="Right"
            VerticalAlignment="Stretch"
            IsChecked="{Binding IsLaunchAppAtStartUp}"
            Checked="chbRunOnStartUp_Checked" 
            Unchecked="chbRunOnStartUp_Unchecked" 
            Cursor="Hand"
        />

        <!--Button quit-->
        <Button
            Grid.Row="5"
            Grid.Column="5"
            Margin="5"
            VerticalAlignment="Center"
            HorizontalAlignment="Right"
            Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}" 
            CommandTarget="{Binding ElementName=confirmExitDialog}"
            ToolTip="Quit"
            Height="45"
            Cursor="Hand">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Quit"/>
                <materialDesign:PackIcon Kind="ExitToApp" Margin="4 0.5 0 0"/>
            </StackPanel>
        </Button>
        <materialDesign:DialogHost
            Grid.Row="0"
            Grid.Column="0"
            Grid.RowSpan="6"
            Grid.ColumnSpan="6"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            DialogClosing="DialogHost_DialogClosing"
            Panel.ZIndex="100"
            x:Name="confirmExitDialog">
            <materialDesign:DialogHost.DialogContent>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="100"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="50"/>
                    </Grid.RowDefinitions>

                    <TextBlock
                        Grid.Row="0"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Text="Quit"
                        Margin="5 20" 
                        HorizontalAlignment="Center" 
                        TextAlignment="Center"
                    />

                    <Button
                        Grid.Row="1"
                        Grid.Column="0"
                        HorizontalAlignment="Stretch"
                        Style="{StaticResource MaterialDesignFlatButton}"
                        IsDefault="True"
                        Margin="5"
                        Command="materialDesign:DialogHost.CloseDialogCommand">
                        <Button.CommandParameter>
                            <system:Boolean xmlns:system="clr-namespace:System;assembly=mscorlib">
                                True
                            </system:Boolean>
                        </Button.CommandParameter>
                        Exit
                    </Button>
                    <Button
                        Grid.Row="1"
                        Grid.Column="1"
                        HorizontalAlignment="Stretch"
                        Style="{StaticResource MaterialDesignFlatButton}"
                        IsCancel="True"
                        Margin="5"
                        Command="materialDesign:DialogHost.CloseDialogCommand"
                    >
                        <Button.CommandParameter>
                            <system:Boolean xmlns:system="clr-namespace:System;assembly=mscorlib">
                                False
                            </system:Boolean>
                        </Button.CommandParameter>
                        CANCEL
                    </Button>
                    
                </Grid>
            </materialDesign:DialogHost.DialogContent>
        </materialDesign:DialogHost>


        <!--<DockPanel
            Grid.Row="0"
            Grid.Column="0"
            Grid.ColumnSpan="6"
            Grid.RowSpan="6">
            <materialDesign:ColorZone
                Mode="PrimaryDark"
                Padding="16"
                CornerRadius="0"
                materialDesign:ShadowAssist.ShadowDepth="Depth3"
                Margin="0">
                <StackPanel
                    Orientation="Horizontal">
                    <ToggleButton
                        Style="{DynamicResource MaterialDesignHamburgerToggleButton}" />
                    <TextBlock
                        VerticalAlignment="Center"
                        Margin="16 0 0 0"
                        Style="{StaticResource MaterialDesignHeadline6TextBlock}">
                        Printing Service
                    </TextBlock>
                </StackPanel>
            </materialDesign:ColorZone>
        </DockPanel>-->



        <tb:TaskbarIcon 
            x:Name="myNotifyIcon"
            Visibility="Hidden"
            ToolTipText="Printing Servcie"
            IconSource="/Icons/print.ico"
            PopupActivation="RightClick"
            TrayMouseDoubleClick="myNotifyIcon_TrayMouseDoubleClick">
            <tb:TaskbarIcon.TrayToolTip>
                <Border
                    Background="White"
                    BorderBrush="Orange"
                    BorderThickness="2"
                    CornerRadius="4"
                    Opacity="0.8"
                    Width="160"
                    Height="40">
                <TextBlock
                    Text="Printing Service"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"/>
                </Border>
            </tb:TaskbarIcon.TrayToolTip>

            <tb:TaskbarIcon.TrayPopup>
                <Border
                    Background="White"
                    BorderBrush="Orange"
                    BorderThickness="2"
                    CornerRadius="4"
                    Width="160"
                    Height="40">
                    <Button x:Name="btnExitPrintingServiceViaSystemTray"
                        Content="Exit"
                        HorizontalAlignment="Stretch"
                        Cursor="Hand"
                        VerticalAlignment="Stretch" 
                        Click="btnExitPrintingServiceViaSystemTray_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border CornerRadius="5" Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Gray"/>
                                        <Setter Property="Foreground" Value="White"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Border>
            </tb:TaskbarIcon.TrayPopup>
        </tb:TaskbarIcon>


    </Grid>
</Window>
